package com.example.searchgithubrepo.domain.model

import android.os.Parcelable
import kotlinx.parcelize.Parcelize

@Parcelize
data class RepoModel(
    val id: Long? = null,
    val nodeID: String? = null,
    val name: String? = null,
    val fullName: String? = null,
    val owner: OwnerModel? = null,
    val private: Boolean? = null,
    val htmlURL: String? = null,
    val description: String? = null,
    val fork: Boolean? = null,
    val url: String? = null,
    val createdAt: String? = null,
    val updatedAt: String? = null,
    val pushedAt: String? = null,
    val homepage: String? = null,
    val size: Long? = null,
    val stargazersCount: Long? = null,
    val watchersCount: Long? = null,
    val language: String? = null,
    val forksCount: Long? = null,
    val openIssuesCount: Long? = null,
    val masterBranch: String? = null,
    val defaultBranch: String? = null,
    val score: Long? = null,
    val archiveURL: String? = null,
    val assigneesURL: String? = null,
    val blobsURL: String? = null,
    val branchesURL: String? = null,
    val collaboratorsURL: String? = null,
    val commentsURL: String? = null,
    val commitsURL: String? = null,
    val compareURL: String? = null,
    val contentsURL: String? = null,
    val contributorsURL: String? = null,
    val deploymentsURL: String? = null,
    val downloadsURL: String? = null,
    val eventsURL: String? = null,
    val forksURL: String? = null,
    val gitCommitsURL: String? = null,
    val gitRefsURL: String? = null,
    val gitTagsURL: String? = null,
    val gitURL: String? = null,
    val issueCommentURL: String? = null,
    val issueEventsURL: String? = null,
    val issuesURL: String? = null,
    val keysURL: String? = null,
    val labelsURL: String? = null,
    val languagesURL: String? = null,
    val mergesURL: String? = null,
    val milestonesURL: String? = null,
    val notificationsURL: String? = null,
    val pullsURL: String? = null,
    val releasesURL: String? = null,
    val sshURL: String? = null,
    val stargazersURL: String? = null,
    val statusesURL: String? = null,
    val subscribersURL: String? = null,
    val subscriptionURL: String? = null,
    val tagsURL: String? = null,
    val teamsURL: String? = null,
    val treesURL: String? = null,
    val cloneURL: String? = null,
    val mirrorURL: String? = null,
    val hooksURL: String? = null,
    val svnURL: String? = null,
    val forks: Long? = null,
    val openIssues: Long? = null,
    val watchers: Long? = null,
    val hasIssues: Boolean? = null,
    val hasProjects: Boolean? = null,
    val hasPages: Boolean? = null,
    val hasWiki: Boolean? = null,
    val hasDownloads: Boolean? = null,
    val archived: Boolean? = null,
    val disabled: Boolean? = null,
    val visibility: String? = null,
    val license: LicenseModel? = null
) : Parcelable

@Parcelize
data class LicenseModel(
    val key: String? = null,
    val name: String? = null,
    val url: String? = null,
    val spdxID: String? = null,
    val nodeID: String? = null,
    val htmlURL: String? = null
) : Parcelable

@Parcelize
data class OwnerModel(
    val login: String? = null,
    val id: Long? = null,
    val nodeID: String? = null,
    val avatarURL: String? = null,
    val gravatarID: String? = null,
    val url: String? = null,
    val receivedEventsURL: String? = null,
    val type: String? = null,
    val htmlURL: String? = null,
    val followersURL: String? = null,
    val followingURL: String? = null,
    val gistsURL: String? = null,
    val starredURL: String? = null,
    val subscriptionsURL: String? = null,
    val organizationsURL: String? = null,
    val reposURL: String? = null,
    val eventsURL: String? = null,
    val siteAdmin: Boolean? = null
) : Parcelable
